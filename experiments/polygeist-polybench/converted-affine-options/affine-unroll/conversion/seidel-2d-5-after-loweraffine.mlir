module {
  func.func @kernel_seidel_2d(%arg0: i32, %arg1: i32, %arg2: memref<?x40xf64>) {
    %cst = arith.constant 9.000000e+00 : f64
    %c0 = arith.constant 0 : index
    %c2 = arith.constant 2 : index
    %c1 = arith.constant 1 : index
    scf.for %arg3 = %c0 to %c2 step %c1 {
      %c3 = arith.constant 3 : index
      %0 = arith.addi %arg3, %c3 : index
      %c1_0 = arith.constant 1 : index
      scf.for %arg4 = %arg3 to %0 step %c1_0 {
        %c0_1 = arith.constant 0 : index
        %c16 = arith.constant 16 : index
        %1 = arith.muli %arg4, %c16 : index
        %c-38 = arith.constant -38 : index
        %2 = arith.addi %1, %c-38 : index
        %3 = arith.maxsi %c0_1, %2 : index
        %c20 = arith.constant 20 : index
        %c16_2 = arith.constant 16 : index
        %4 = arith.muli %arg4, %c16_2 : index
        %c15 = arith.constant 15 : index
        %5 = arith.addi %4, %c15 : index
        %6 = arith.minsi %c20, %5 : index
        %c1_3 = arith.constant 1 : index
        scf.for %arg5 = %3 to %6 step %c1_3 {
          %c32 = arith.constant 32 : index
          %7 = arith.muli %arg3, %c32 : index
          %c1_4 = arith.constant 1 : index
          %8 = arith.addi %arg5, %c1_4 : index
          %c-1 = arith.constant -1 : index
          %9 = arith.muli %arg5, %c-1 : index
          %c32_5 = arith.constant 32 : index
          %10 = arith.muli %arg4, %c32_5 : index
          %11 = arith.addi %9, %10 : index
          %c-38_6 = arith.constant -38 : index
          %12 = arith.addi %11, %c-38_6 : index
          %13 = arith.maxsi %7, %8 : index
          %14 = arith.maxsi %13, %12 : index
          %c32_7 = arith.constant 32 : index
          %15 = arith.muli %arg3, %c32_7 : index
          %c32_8 = arith.constant 32 : index
          %16 = arith.addi %15, %c32_8 : index
          %c39 = arith.constant 39 : index
          %17 = arith.addi %arg5, %c39 : index
          %c-1_9 = arith.constant -1 : index
          %18 = arith.muli %arg5, %c-1_9 : index
          %c32_10 = arith.constant 32 : index
          %19 = arith.muli %arg4, %c32_10 : index
          %20 = arith.addi %18, %19 : index
          %c31 = arith.constant 31 : index
          %21 = arith.addi %20, %c31 : index
          %22 = arith.minsi %16, %17 : index
          %23 = arith.minsi %22, %21 : index
          %c1_11 = arith.constant 1 : index
          scf.for %arg6 = %14 to %23 step %c1_11 {
            %c32_12 = arith.constant 32 : index
            %24 = arith.muli %arg4, %c32_12 : index
            %25 = arith.addi %arg5, %arg6 : index
            %c1_13 = arith.constant 1 : index
            %26 = arith.addi %25, %c1_13 : index
            %27 = arith.maxsi %24, %26 : index
            %c32_14 = arith.constant 32 : index
            %28 = arith.muli %arg4, %c32_14 : index
            %c32_15 = arith.constant 32 : index
            %29 = arith.addi %28, %c32_15 : index
            %30 = arith.addi %arg5, %arg6 : index
            %c39_16 = arith.constant 39 : index
            %31 = arith.addi %30, %c39_16 : index
            %32 = arith.minsi %29, %31 : index
            %c1_17 = arith.constant 1 : index
            scf.for %arg7 = %27 to %32 step %c1_17 {
              %c-1_18 = arith.constant -1 : index
              %33 = arith.muli %arg6, %c-1_18 : index
              %34 = arith.addi %33, %arg5 : index
              %c-1_19 = arith.constant -1 : index
              %35 = arith.addi %34, %c-1_19 : index
              %c-1_20 = arith.constant -1 : index
              %36 = arith.muli %arg6, %c-1_20 : index
              %c-1_21 = arith.constant -1 : index
              %37 = arith.muli %arg5, %c-1_21 : index
              %38 = arith.addi %36, %37 : index
              %39 = arith.addi %38, %arg7 : index
              %c-1_22 = arith.constant -1 : index
              %40 = arith.addi %39, %c-1_22 : index
              %41 = memref.load %arg2[%35, %40] : memref<?x40xf64>
              %c-1_23 = arith.constant -1 : index
              %42 = arith.muli %arg6, %c-1_23 : index
              %43 = arith.addi %42, %arg5 : index
              %c-1_24 = arith.constant -1 : index
              %44 = arith.addi %43, %c-1_24 : index
              %c-1_25 = arith.constant -1 : index
              %45 = arith.muli %arg6, %c-1_25 : index
              %c-1_26 = arith.constant -1 : index
              %46 = arith.muli %arg5, %c-1_26 : index
              %47 = arith.addi %45, %46 : index
              %48 = arith.addi %47, %arg7 : index
              %49 = memref.load %arg2[%44, %48] : memref<?x40xf64>
              %50 = arith.addf %41, %49 : f64
              %c-1_27 = arith.constant -1 : index
              %51 = arith.muli %arg6, %c-1_27 : index
              %52 = arith.addi %51, %arg5 : index
              %c-1_28 = arith.constant -1 : index
              %53 = arith.addi %52, %c-1_28 : index
              %c-1_29 = arith.constant -1 : index
              %54 = arith.muli %arg6, %c-1_29 : index
              %c-1_30 = arith.constant -1 : index
              %55 = arith.muli %arg5, %c-1_30 : index
              %56 = arith.addi %54, %55 : index
              %57 = arith.addi %56, %arg7 : index
              %c1_31 = arith.constant 1 : index
              %58 = arith.addi %57, %c1_31 : index
              %59 = memref.load %arg2[%53, %58] : memref<?x40xf64>
              %60 = arith.addf %50, %59 : f64
              %c-1_32 = arith.constant -1 : index
              %61 = arith.muli %arg6, %c-1_32 : index
              %62 = arith.addi %61, %arg5 : index
              %c-1_33 = arith.constant -1 : index
              %63 = arith.muli %arg6, %c-1_33 : index
              %c-1_34 = arith.constant -1 : index
              %64 = arith.muli %arg5, %c-1_34 : index
              %65 = arith.addi %63, %64 : index
              %66 = arith.addi %65, %arg7 : index
              %c-1_35 = arith.constant -1 : index
              %67 = arith.addi %66, %c-1_35 : index
              %68 = memref.load %arg2[%62, %67] : memref<?x40xf64>
              %69 = arith.addf %60, %68 : f64
              %c-1_36 = arith.constant -1 : index
              %70 = arith.muli %arg6, %c-1_36 : index
              %71 = arith.addi %70, %arg5 : index
              %c-1_37 = arith.constant -1 : index
              %72 = arith.muli %arg6, %c-1_37 : index
              %c-1_38 = arith.constant -1 : index
              %73 = arith.muli %arg5, %c-1_38 : index
              %74 = arith.addi %72, %73 : index
              %75 = arith.addi %74, %arg7 : index
              %76 = memref.load %arg2[%71, %75] : memref<?x40xf64>
              %77 = arith.addf %69, %76 : f64
              %c-1_39 = arith.constant -1 : index
              %78 = arith.muli %arg6, %c-1_39 : index
              %79 = arith.addi %78, %arg5 : index
              %c-1_40 = arith.constant -1 : index
              %80 = arith.muli %arg6, %c-1_40 : index
              %c-1_41 = arith.constant -1 : index
              %81 = arith.muli %arg5, %c-1_41 : index
              %82 = arith.addi %80, %81 : index
              %83 = arith.addi %82, %arg7 : index
              %c1_42 = arith.constant 1 : index
              %84 = arith.addi %83, %c1_42 : index
              %85 = memref.load %arg2[%79, %84] : memref<?x40xf64>
              %86 = arith.addf %77, %85 : f64
              %c-1_43 = arith.constant -1 : index
              %87 = arith.muli %arg6, %c-1_43 : index
              %88 = arith.addi %87, %arg5 : index
              %c1_44 = arith.constant 1 : index
              %89 = arith.addi %88, %c1_44 : index
              %c-1_45 = arith.constant -1 : index
              %90 = arith.muli %arg6, %c-1_45 : index
              %c-1_46 = arith.constant -1 : index
              %91 = arith.muli %arg5, %c-1_46 : index
              %92 = arith.addi %90, %91 : index
              %93 = arith.addi %92, %arg7 : index
              %c-1_47 = arith.constant -1 : index
              %94 = arith.addi %93, %c-1_47 : index
              %95 = memref.load %arg2[%89, %94] : memref<?x40xf64>
              %96 = arith.addf %86, %95 : f64
              %c-1_48 = arith.constant -1 : index
              %97 = arith.muli %arg6, %c-1_48 : index
              %98 = arith.addi %97, %arg5 : index
              %c1_49 = arith.constant 1 : index
              %99 = arith.addi %98, %c1_49 : index
              %c-1_50 = arith.constant -1 : index
              %100 = arith.muli %arg6, %c-1_50 : index
              %c-1_51 = arith.constant -1 : index
              %101 = arith.muli %arg5, %c-1_51 : index
              %102 = arith.addi %100, %101 : index
              %103 = arith.addi %102, %arg7 : index
              %104 = memref.load %arg2[%99, %103] : memref<?x40xf64>
              %105 = arith.addf %96, %104 : f64
              %c-1_52 = arith.constant -1 : index
              %106 = arith.muli %arg6, %c-1_52 : index
              %107 = arith.addi %106, %arg5 : index
              %c1_53 = arith.constant 1 : index
              %108 = arith.addi %107, %c1_53 : index
              %c-1_54 = arith.constant -1 : index
              %109 = arith.muli %arg6, %c-1_54 : index
              %c-1_55 = arith.constant -1 : index
              %110 = arith.muli %arg5, %c-1_55 : index
              %111 = arith.addi %109, %110 : index
              %112 = arith.addi %111, %arg7 : index
              %c1_56 = arith.constant 1 : index
              %113 = arith.addi %112, %c1_56 : index
              %114 = memref.load %arg2[%108, %113] : memref<?x40xf64>
              %115 = arith.addf %105, %114 : f64
              %116 = arith.divf %115, %cst : f64
              %c-1_57 = arith.constant -1 : index
              %117 = arith.muli %arg6, %c-1_57 : index
              %118 = arith.addi %117, %arg5 : index
              %c-1_58 = arith.constant -1 : index
              %119 = arith.muli %arg6, %c-1_58 : index
              %c-1_59 = arith.constant -1 : index
              %120 = arith.muli %arg5, %c-1_59 : index
              %121 = arith.addi %119, %120 : index
              %122 = arith.addi %121, %arg7 : index
              memref.store %116, %arg2[%118, %122] : memref<?x40xf64>
            }
          }
        }
      }
    }
    return
  }
}


module {
  func.func @kernel_seidel_2d(%arg0: i32, %arg1: i32, %arg2: memref<?x40xf64>) {
    %cst = arith.constant 9.000000e+00 : f64
    %c0 = arith.constant 0 : index
    %c2 = arith.constant 2 : index
    %c1 = arith.constant 1 : index
    scf.for %arg3 = %c0 to %c2 step %c1 {
      %c0_0 = arith.constant 0 : index
      %c3 = arith.constant 3 : index
      %c1_1 = arith.constant 1 : index
      scf.for %arg4 = %c0_0 to %c3 step %c1_1 {
        %c0_2 = arith.constant 0 : index
        %c16 = arith.constant 16 : index
        %0 = arith.muli %arg3, %c16 : index
        %c16_3 = arith.constant 16 : index
        %1 = arith.muli %arg4, %c16_3 : index
        %2 = arith.addi %0, %1 : index
        %c-38 = arith.constant -38 : index
        %3 = arith.addi %2, %c-38 : index
        %4 = arith.maxsi %c0_2, %3 : index
        %c20 = arith.constant 20 : index
        %c16_4 = arith.constant 16 : index
        %5 = arith.muli %arg3, %c16_4 : index
        %c16_5 = arith.constant 16 : index
        %6 = arith.muli %arg4, %c16_5 : index
        %7 = arith.addi %5, %6 : index
        %c15 = arith.constant 15 : index
        %8 = arith.addi %7, %c15 : index
        %9 = arith.minsi %c20, %8 : index
        %c1_6 = arith.constant 1 : index
        scf.for %arg5 = %4 to %9 step %c1_6 {
          %c32 = arith.constant 32 : index
          %10 = arith.muli %arg3, %c32 : index
          %c1_7 = arith.constant 1 : index
          %11 = arith.addi %arg5, %c1_7 : index
          %c32_8 = arith.constant 32 : index
          %12 = arith.muli %arg3, %c32_8 : index
          %c-1 = arith.constant -1 : index
          %13 = arith.muli %arg5, %c-1 : index
          %14 = arith.addi %12, %13 : index
          %c32_9 = arith.constant 32 : index
          %15 = arith.muli %arg4, %c32_9 : index
          %16 = arith.addi %14, %15 : index
          %c-38_10 = arith.constant -38 : index
          %17 = arith.addi %16, %c-38_10 : index
          %18 = arith.maxsi %10, %11 : index
          %19 = arith.maxsi %18, %17 : index
          %c32_11 = arith.constant 32 : index
          %20 = arith.muli %arg3, %c32_11 : index
          %c32_12 = arith.constant 32 : index
          %21 = arith.addi %20, %c32_12 : index
          %c39 = arith.constant 39 : index
          %22 = arith.addi %arg5, %c39 : index
          %c32_13 = arith.constant 32 : index
          %23 = arith.muli %arg3, %c32_13 : index
          %c-1_14 = arith.constant -1 : index
          %24 = arith.muli %arg5, %c-1_14 : index
          %25 = arith.addi %23, %24 : index
          %c32_15 = arith.constant 32 : index
          %26 = arith.muli %arg4, %c32_15 : index
          %27 = arith.addi %25, %26 : index
          %c31 = arith.constant 31 : index
          %28 = arith.addi %27, %c31 : index
          %29 = arith.minsi %21, %22 : index
          %30 = arith.minsi %29, %28 : index
          %c1_16 = arith.constant 1 : index
          scf.for %arg6 = %19 to %30 step %c1_16 {
            %c32_17 = arith.constant 32 : index
            %31 = arith.muli %arg3, %c32_17 : index
            %c32_18 = arith.constant 32 : index
            %32 = arith.muli %arg4, %c32_18 : index
            %33 = arith.addi %31, %32 : index
            %34 = arith.addi %arg5, %arg6 : index
            %c1_19 = arith.constant 1 : index
            %35 = arith.addi %34, %c1_19 : index
            %36 = arith.maxsi %33, %35 : index
            %c32_20 = arith.constant 32 : index
            %37 = arith.muli %arg3, %c32_20 : index
            %c32_21 = arith.constant 32 : index
            %38 = arith.muli %arg4, %c32_21 : index
            %39 = arith.addi %37, %38 : index
            %c32_22 = arith.constant 32 : index
            %40 = arith.addi %39, %c32_22 : index
            %41 = arith.addi %arg5, %arg6 : index
            %c39_23 = arith.constant 39 : index
            %42 = arith.addi %41, %c39_23 : index
            %43 = arith.minsi %40, %42 : index
            %c1_24 = arith.constant 1 : index
            scf.for %arg7 = %36 to %43 step %c1_24 {
              %c-1_25 = arith.constant -1 : index
              %44 = arith.muli %arg6, %c-1_25 : index
              %45 = arith.addi %44, %arg5 : index
              %c-1_26 = arith.constant -1 : index
              %46 = arith.addi %45, %c-1_26 : index
              %c-1_27 = arith.constant -1 : index
              %47 = arith.muli %arg6, %c-1_27 : index
              %c-1_28 = arith.constant -1 : index
              %48 = arith.muli %arg5, %c-1_28 : index
              %49 = arith.addi %47, %48 : index
              %50 = arith.addi %49, %arg7 : index
              %c-1_29 = arith.constant -1 : index
              %51 = arith.addi %50, %c-1_29 : index
              %52 = memref.load %arg2[%46, %51] : memref<?x40xf64>
              %c-1_30 = arith.constant -1 : index
              %53 = arith.muli %arg6, %c-1_30 : index
              %54 = arith.addi %53, %arg5 : index
              %c-1_31 = arith.constant -1 : index
              %55 = arith.addi %54, %c-1_31 : index
              %c-1_32 = arith.constant -1 : index
              %56 = arith.muli %arg6, %c-1_32 : index
              %c-1_33 = arith.constant -1 : index
              %57 = arith.muli %arg5, %c-1_33 : index
              %58 = arith.addi %56, %57 : index
              %59 = arith.addi %58, %arg7 : index
              %60 = memref.load %arg2[%55, %59] : memref<?x40xf64>
              %61 = arith.addf %52, %60 : f64
              %c-1_34 = arith.constant -1 : index
              %62 = arith.muli %arg6, %c-1_34 : index
              %63 = arith.addi %62, %arg5 : index
              %c-1_35 = arith.constant -1 : index
              %64 = arith.addi %63, %c-1_35 : index
              %c-1_36 = arith.constant -1 : index
              %65 = arith.muli %arg6, %c-1_36 : index
              %c-1_37 = arith.constant -1 : index
              %66 = arith.muli %arg5, %c-1_37 : index
              %67 = arith.addi %65, %66 : index
              %68 = arith.addi %67, %arg7 : index
              %c1_38 = arith.constant 1 : index
              %69 = arith.addi %68, %c1_38 : index
              %70 = memref.load %arg2[%64, %69] : memref<?x40xf64>
              %71 = arith.addf %61, %70 : f64
              %c-1_39 = arith.constant -1 : index
              %72 = arith.muli %arg6, %c-1_39 : index
              %73 = arith.addi %72, %arg5 : index
              %c-1_40 = arith.constant -1 : index
              %74 = arith.muli %arg6, %c-1_40 : index
              %c-1_41 = arith.constant -1 : index
              %75 = arith.muli %arg5, %c-1_41 : index
              %76 = arith.addi %74, %75 : index
              %77 = arith.addi %76, %arg7 : index
              %c-1_42 = arith.constant -1 : index
              %78 = arith.addi %77, %c-1_42 : index
              %79 = memref.load %arg2[%73, %78] : memref<?x40xf64>
              %80 = arith.addf %71, %79 : f64
              %c-1_43 = arith.constant -1 : index
              %81 = arith.muli %arg6, %c-1_43 : index
              %82 = arith.addi %81, %arg5 : index
              %c-1_44 = arith.constant -1 : index
              %83 = arith.muli %arg6, %c-1_44 : index
              %c-1_45 = arith.constant -1 : index
              %84 = arith.muli %arg5, %c-1_45 : index
              %85 = arith.addi %83, %84 : index
              %86 = arith.addi %85, %arg7 : index
              %87 = memref.load %arg2[%82, %86] : memref<?x40xf64>
              %88 = arith.addf %80, %87 : f64
              %c-1_46 = arith.constant -1 : index
              %89 = arith.muli %arg6, %c-1_46 : index
              %90 = arith.addi %89, %arg5 : index
              %c-1_47 = arith.constant -1 : index
              %91 = arith.muli %arg6, %c-1_47 : index
              %c-1_48 = arith.constant -1 : index
              %92 = arith.muli %arg5, %c-1_48 : index
              %93 = arith.addi %91, %92 : index
              %94 = arith.addi %93, %arg7 : index
              %c1_49 = arith.constant 1 : index
              %95 = arith.addi %94, %c1_49 : index
              %96 = memref.load %arg2[%90, %95] : memref<?x40xf64>
              %97 = arith.addf %88, %96 : f64
              %c-1_50 = arith.constant -1 : index
              %98 = arith.muli %arg6, %c-1_50 : index
              %99 = arith.addi %98, %arg5 : index
              %c1_51 = arith.constant 1 : index
              %100 = arith.addi %99, %c1_51 : index
              %c-1_52 = arith.constant -1 : index
              %101 = arith.muli %arg6, %c-1_52 : index
              %c-1_53 = arith.constant -1 : index
              %102 = arith.muli %arg5, %c-1_53 : index
              %103 = arith.addi %101, %102 : index
              %104 = arith.addi %103, %arg7 : index
              %c-1_54 = arith.constant -1 : index
              %105 = arith.addi %104, %c-1_54 : index
              %106 = memref.load %arg2[%100, %105] : memref<?x40xf64>
              %107 = arith.addf %97, %106 : f64
              %c-1_55 = arith.constant -1 : index
              %108 = arith.muli %arg6, %c-1_55 : index
              %109 = arith.addi %108, %arg5 : index
              %c1_56 = arith.constant 1 : index
              %110 = arith.addi %109, %c1_56 : index
              %c-1_57 = arith.constant -1 : index
              %111 = arith.muli %arg6, %c-1_57 : index
              %c-1_58 = arith.constant -1 : index
              %112 = arith.muli %arg5, %c-1_58 : index
              %113 = arith.addi %111, %112 : index
              %114 = arith.addi %113, %arg7 : index
              %115 = memref.load %arg2[%110, %114] : memref<?x40xf64>
              %116 = arith.addf %107, %115 : f64
              %c-1_59 = arith.constant -1 : index
              %117 = arith.muli %arg6, %c-1_59 : index
              %118 = arith.addi %117, %arg5 : index
              %c1_60 = arith.constant 1 : index
              %119 = arith.addi %118, %c1_60 : index
              %c-1_61 = arith.constant -1 : index
              %120 = arith.muli %arg6, %c-1_61 : index
              %c-1_62 = arith.constant -1 : index
              %121 = arith.muli %arg5, %c-1_62 : index
              %122 = arith.addi %120, %121 : index
              %123 = arith.addi %122, %arg7 : index
              %c1_63 = arith.constant 1 : index
              %124 = arith.addi %123, %c1_63 : index
              %125 = memref.load %arg2[%119, %124] : memref<?x40xf64>
              %126 = arith.addf %116, %125 : f64
              %127 = arith.divf %126, %cst : f64
              %c-1_64 = arith.constant -1 : index
              %128 = arith.muli %arg6, %c-1_64 : index
              %129 = arith.addi %128, %arg5 : index
              %c-1_65 = arith.constant -1 : index
              %130 = arith.muli %arg6, %c-1_65 : index
              %c-1_66 = arith.constant -1 : index
              %131 = arith.muli %arg5, %c-1_66 : index
              %132 = arith.addi %130, %131 : index
              %133 = arith.addi %132, %arg7 : index
              memref.store %127, %arg2[%129, %133] : memref<?x40xf64>
            }
          }
        }
      }
    }
    return
  }
}


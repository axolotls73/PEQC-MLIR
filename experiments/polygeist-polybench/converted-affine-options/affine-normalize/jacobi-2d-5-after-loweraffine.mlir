module {
  func.func @kernel_jacobi_2d(%arg0: i32, %arg1: i32, %arg2: memref<?x30xf64>, %arg3: memref<?x30xf64>) {
    %cst = arith.constant 2.000000e-01 : f64
    %c0 = arith.constant 0 : index
    %c3 = arith.constant 3 : index
    %c1 = arith.constant 1 : index
    scf.for %arg4 = %c0 to %c3 step %c1 {
      %c0_0 = arith.constant 0 : index
      %c-1 = arith.constant -1 : index
      %0 = arith.addi %arg4, %c-1 : index
      %1 = arith.maxsi %c0_0, %0 : index
      %c3_1 = arith.constant 3 : index
      %c2 = arith.constant 2 : index
      %2 = arith.addi %arg4, %c2 : index
      %3 = arith.minsi %c3_1, %2 : index
      %c1_2 = arith.constant 1 : index
      scf.for %arg5 = %1 to %3 step %c1_2 {
        %c0_3 = arith.constant 0 : index
        %c16 = arith.constant 16 : index
        %4 = arith.muli %arg4, %c16 : index
        %c-14 = arith.constant -14 : index
        %5 = arith.addi %4, %c-14 : index
        %c16_4 = arith.constant 16 : index
        %6 = arith.muli %arg5, %c16_4 : index
        %c-14_5 = arith.constant -14 : index
        %7 = arith.addi %6, %c-14_5 : index
        %8 = arith.maxsi %c0_3, %5 : index
        %9 = arith.maxsi %8, %7 : index
        %c20 = arith.constant 20 : index
        %c16_6 = arith.constant 16 : index
        %10 = arith.muli %arg4, %c16_6 : index
        %c15 = arith.constant 15 : index
        %11 = arith.addi %10, %c15 : index
        %c16_7 = arith.constant 16 : index
        %12 = arith.muli %arg5, %c16_7 : index
        %c15_8 = arith.constant 15 : index
        %13 = arith.addi %12, %c15_8 : index
        %14 = arith.minsi %c20, %11 : index
        %15 = arith.minsi %14, %13 : index
        %c1_9 = arith.constant 1 : index
        scf.for %arg6 = %9 to %15 step %c1_9 {
          %c0_14 = arith.constant 0 : index
          %c16_15 = arith.constant 16 : index
          %c0_16 = arith.constant 0 : index
          %c-1_17 = arith.constant -1 : index
          %21 = arith.cmpi slt, %arg6, %c0_16 : index
          %22 = arith.subi %c-1_17, %arg6 : index
          %23 = arith.select %21, %22, %arg6 : index
          %24 = arith.divsi %23, %c16_15 : index
          %25 = arith.subi %c-1_17, %24 : index
          %26 = arith.select %21, %25, %24 : index
          %c-1_18 = arith.constant -1 : index
          %27 = arith.muli %arg4, %c-1_18 : index
          %28 = arith.addi %26, %27 : index
          %29 = arith.cmpi sge, %28, %c0_14 : index
          scf.if %29 {
            %c32_31 = arith.constant 32 : index
            %51 = arith.muli %arg5, %c32_31 : index
            %c2_32 = arith.constant 2 : index
            %52 = arith.muli %arg6, %c2_32 : index
            %c1_33 = arith.constant 1 : index
            %53 = arith.addi %52, %c1_33 : index
            %54 = arith.maxsi %51, %53 : index
            %c32_34 = arith.constant 32 : index
            %55 = arith.muli %arg5, %c32_34 : index
            %c32_35 = arith.constant 32 : index
            %56 = arith.addi %55, %c32_35 : index
            %c2_36 = arith.constant 2 : index
            %57 = arith.muli %arg6, %c2_36 : index
            %c29_37 = arith.constant 29 : index
            %58 = arith.addi %57, %c29_37 : index
            %59 = arith.minsi %56, %58 : index
            %c1_38 = arith.constant 1 : index
            scf.for %arg7 = %54 to %59 step %c1_38 {
              %c1_39 = arith.constant 1 : index
              %c-2 = arith.constant -2 : index
              %60 = arith.muli %arg6, %c-2 : index
              %61 = arith.addi %60, %arg7 : index
              %62 = memref.load %arg2[%c1_39, %61] : memref<?x30xf64>
              %c1_40 = arith.constant 1 : index
              %c-2_41 = arith.constant -2 : index
              %63 = arith.muli %arg6, %c-2_41 : index
              %64 = arith.addi %63, %arg7 : index
              %c-1_42 = arith.constant -1 : index
              %65 = arith.addi %64, %c-1_42 : index
              %66 = memref.load %arg2[%c1_40, %65] : memref<?x30xf64>
              %67 = arith.addf %62, %66 : f64
              %c1_43 = arith.constant 1 : index
              %c-2_44 = arith.constant -2 : index
              %68 = arith.muli %arg6, %c-2_44 : index
              %69 = arith.addi %68, %arg7 : index
              %c1_45 = arith.constant 1 : index
              %70 = arith.addi %69, %c1_45 : index
              %71 = memref.load %arg2[%c1_43, %70] : memref<?x30xf64>
              %72 = arith.addf %67, %71 : f64
              %c2_46 = arith.constant 2 : index
              %c-2_47 = arith.constant -2 : index
              %73 = arith.muli %arg6, %c-2_47 : index
              %74 = arith.addi %73, %arg7 : index
              %75 = memref.load %arg2[%c2_46, %74] : memref<?x30xf64>
              %76 = arith.addf %72, %75 : f64
              %c0_48 = arith.constant 0 : index
              %c-2_49 = arith.constant -2 : index
              %77 = arith.muli %arg6, %c-2_49 : index
              %78 = arith.addi %77, %arg7 : index
              %79 = memref.load %arg2[%c0_48, %78] : memref<?x30xf64>
              %80 = arith.addf %76, %79 : f64
              %81 = arith.mulf %80, %cst : f64
              %c1_50 = arith.constant 1 : index
              %c-2_51 = arith.constant -2 : index
              %82 = arith.muli %arg6, %c-2_51 : index
              %83 = arith.addi %82, %arg7 : index
              memref.store %81, %arg3[%c1_50, %83] : memref<?x30xf64>
            }
          }
          %c32 = arith.constant 32 : index
          %30 = arith.muli %arg4, %c32 : index
          %c2_19 = arith.constant 2 : index
          %31 = arith.muli %arg6, %c2_19 : index
          %c2_20 = arith.constant 2 : index
          %32 = arith.addi %31, %c2_20 : index
          %33 = arith.maxsi %30, %32 : index
          %c32_21 = arith.constant 32 : index
          %34 = arith.muli %arg4, %c32_21 : index
          %c32_22 = arith.constant 32 : index
          %35 = arith.addi %34, %c32_22 : index
          %c2_23 = arith.constant 2 : index
          %36 = arith.muli %arg6, %c2_23 : index
          %c29 = arith.constant 29 : index
          %37 = arith.addi %36, %c29 : index
          %38 = arith.minsi %35, %37 : index
          %c1_24 = arith.constant 1 : index
          scf.for %arg7 = %33 to %38 step %c1_24 {
            %c0_31 = arith.constant 0 : index
            %c16_32 = arith.constant 16 : index
            %c0_33 = arith.constant 0 : index
            %c-1_34 = arith.constant -1 : index
            %51 = arith.cmpi slt, %arg6, %c0_33 : index
            %52 = arith.subi %c-1_34, %arg6 : index
            %53 = arith.select %51, %52, %arg6 : index
            %54 = arith.divsi %53, %c16_32 : index
            %55 = arith.subi %c-1_34, %54 : index
            %56 = arith.select %51, %55, %54 : index
            %c-1_35 = arith.constant -1 : index
            %57 = arith.muli %arg5, %c-1_35 : index
            %58 = arith.addi %56, %57 : index
            %59 = arith.cmpi sge, %58, %c0_31 : index
            scf.if %59 {
              %c-2 = arith.constant -2 : index
              %81 = arith.muli %arg7, %c-2 : index
              %82 = arith.addi %81, %arg6 : index
              %c1_50 = arith.constant 1 : index
              %83 = memref.load %arg2[%82, %c1_50] : memref<?x30xf64>
              %c-2_51 = arith.constant -2 : index
              %84 = arith.muli %arg7, %c-2_51 : index
              %85 = arith.addi %84, %arg6 : index
              %c0_52 = arith.constant 0 : index
              %86 = memref.load %arg2[%85, %c0_52] : memref<?x30xf64>
              %87 = arith.addf %83, %86 : f64
              %c-2_53 = arith.constant -2 : index
              %88 = arith.muli %arg7, %c-2_53 : index
              %89 = arith.addi %88, %arg6 : index
              %c2_54 = arith.constant 2 : index
              %90 = memref.load %arg2[%89, %c2_54] : memref<?x30xf64>
              %91 = arith.addf %87, %90 : f64
              %c-2_55 = arith.constant -2 : index
              %92 = arith.muli %arg7, %c-2_55 : index
              %93 = arith.addi %92, %arg6 : index
              %c1_56 = arith.constant 1 : index
              %94 = arith.addi %93, %c1_56 : index
              %c1_57 = arith.constant 1 : index
              %95 = memref.load %arg2[%94, %c1_57] : memref<?x30xf64>
              %96 = arith.addf %91, %95 : f64
              %c-2_58 = arith.constant -2 : index
              %97 = arith.muli %arg7, %c-2_58 : index
              %98 = arith.addi %97, %arg6 : index
              %c-1_59 = arith.constant -1 : index
              %99 = arith.addi %98, %c-1_59 : index
              %c1_60 = arith.constant 1 : index
              %100 = memref.load %arg2[%99, %c1_60] : memref<?x30xf64>
              %101 = arith.addf %96, %100 : f64
              %102 = arith.mulf %101, %cst : f64
              %c-2_61 = arith.constant -2 : index
              %103 = arith.muli %arg7, %c-2_61 : index
              %104 = arith.addi %103, %arg6 : index
              %c1_62 = arith.constant 1 : index
              memref.store %102, %arg3[%104, %c1_62] : memref<?x30xf64>
            }
            %c32_36 = arith.constant 32 : index
            %60 = arith.muli %arg5, %c32_36 : index
            %c2_37 = arith.constant 2 : index
            %61 = arith.muli %arg6, %c2_37 : index
            %c2_38 = arith.constant 2 : index
            %62 = arith.addi %61, %c2_38 : index
            %63 = arith.maxsi %60, %62 : index
            %c32_39 = arith.constant 32 : index
            %64 = arith.muli %arg5, %c32_39 : index
            %c32_40 = arith.constant 32 : index
            %65 = arith.addi %64, %c32_40 : index
            %c2_41 = arith.constant 2 : index
            %66 = arith.muli %arg6, %c2_41 : index
            %c29_42 = arith.constant 29 : index
            %67 = arith.addi %66, %c29_42 : index
            %68 = arith.minsi %65, %67 : index
            %c1_43 = arith.constant 1 : index
            scf.for %arg8 = %63 to %68 step %c1_43 {
              %c-2 = arith.constant -2 : index
              %81 = arith.muli %arg7, %c-2 : index
              %82 = arith.addi %81, %arg6 : index
              %c-2_50 = arith.constant -2 : index
              %83 = arith.muli %arg6, %c-2_50 : index
              %84 = arith.addi %83, %arg8 : index
              %85 = memref.load %arg2[%82, %84] : memref<?x30xf64>
              %c-2_51 = arith.constant -2 : index
              %86 = arith.muli %arg7, %c-2_51 : index
              %87 = arith.addi %86, %arg6 : index
              %c-2_52 = arith.constant -2 : index
              %88 = arith.muli %arg6, %c-2_52 : index
              %89 = arith.addi %88, %arg8 : index
              %c-1_53 = arith.constant -1 : index
              %90 = arith.addi %89, %c-1_53 : index
              %91 = memref.load %arg2[%87, %90] : memref<?x30xf64>
              %92 = arith.addf %85, %91 : f64
              %c-2_54 = arith.constant -2 : index
              %93 = arith.muli %arg7, %c-2_54 : index
              %94 = arith.addi %93, %arg6 : index
              %c-2_55 = arith.constant -2 : index
              %95 = arith.muli %arg6, %c-2_55 : index
              %96 = arith.addi %95, %arg8 : index
              %c1_56 = arith.constant 1 : index
              %97 = arith.addi %96, %c1_56 : index
              %98 = memref.load %arg2[%94, %97] : memref<?x30xf64>
              %99 = arith.addf %92, %98 : f64
              %c-2_57 = arith.constant -2 : index
              %100 = arith.muli %arg7, %c-2_57 : index
              %101 = arith.addi %100, %arg6 : index
              %c1_58 = arith.constant 1 : index
              %102 = arith.addi %101, %c1_58 : index
              %c-2_59 = arith.constant -2 : index
              %103 = arith.muli %arg6, %c-2_59 : index
              %104 = arith.addi %103, %arg8 : index
              %105 = memref.load %arg2[%102, %104] : memref<?x30xf64>
              %106 = arith.addf %99, %105 : f64
              %c-2_60 = arith.constant -2 : index
              %107 = arith.muli %arg7, %c-2_60 : index
              %108 = arith.addi %107, %arg6 : index
              %c-1_61 = arith.constant -1 : index
              %109 = arith.addi %108, %c-1_61 : index
              %c-2_62 = arith.constant -2 : index
              %110 = arith.muli %arg6, %c-2_62 : index
              %111 = arith.addi %110, %arg8 : index
              %112 = memref.load %arg2[%109, %111] : memref<?x30xf64>
              %113 = arith.addf %106, %112 : f64
              %114 = arith.mulf %113, %cst : f64
              %c-2_63 = arith.constant -2 : index
              %115 = arith.muli %arg7, %c-2_63 : index
              %116 = arith.addi %115, %arg6 : index
              %c-2_64 = arith.constant -2 : index
              %117 = arith.muli %arg6, %c-2_64 : index
              %118 = arith.addi %117, %arg8 : index
              memref.store %114, %arg3[%116, %118] : memref<?x30xf64>
              %c-2_65 = arith.constant -2 : index
              %119 = arith.muli %arg7, %c-2_65 : index
              %120 = arith.addi %119, %arg6 : index
              %c-1_66 = arith.constant -1 : index
              %121 = arith.addi %120, %c-1_66 : index
              %c-2_67 = arith.constant -2 : index
              %122 = arith.muli %arg6, %c-2_67 : index
              %123 = arith.addi %122, %arg8 : index
              %c-1_68 = arith.constant -1 : index
              %124 = arith.addi %123, %c-1_68 : index
              %125 = memref.load %arg3[%121, %124] : memref<?x30xf64>
              %c-2_69 = arith.constant -2 : index
              %126 = arith.muli %arg7, %c-2_69 : index
              %127 = arith.addi %126, %arg6 : index
              %c-1_70 = arith.constant -1 : index
              %128 = arith.addi %127, %c-1_70 : index
              %c-2_71 = arith.constant -2 : index
              %129 = arith.muli %arg6, %c-2_71 : index
              %130 = arith.addi %129, %arg8 : index
              %c-2_72 = arith.constant -2 : index
              %131 = arith.addi %130, %c-2_72 : index
              %132 = memref.load %arg3[%128, %131] : memref<?x30xf64>
              %133 = arith.addf %125, %132 : f64
              %c-2_73 = arith.constant -2 : index
              %134 = arith.muli %arg7, %c-2_73 : index
              %135 = arith.addi %134, %arg6 : index
              %c-1_74 = arith.constant -1 : index
              %136 = arith.addi %135, %c-1_74 : index
              %c-2_75 = arith.constant -2 : index
              %137 = arith.muli %arg6, %c-2_75 : index
              %138 = arith.addi %137, %arg8 : index
              %139 = memref.load %arg3[%136, %138] : memref<?x30xf64>
              %140 = arith.addf %133, %139 : f64
              %c-2_76 = arith.constant -2 : index
              %141 = arith.muli %arg7, %c-2_76 : index
              %142 = arith.addi %141, %arg6 : index
              %c-2_77 = arith.constant -2 : index
              %143 = arith.muli %arg6, %c-2_77 : index
              %144 = arith.addi %143, %arg8 : index
              %c-1_78 = arith.constant -1 : index
              %145 = arith.addi %144, %c-1_78 : index
              %146 = memref.load %arg3[%142, %145] : memref<?x30xf64>
              %147 = arith.addf %140, %146 : f64
              %c-2_79 = arith.constant -2 : index
              %148 = arith.muli %arg7, %c-2_79 : index
              %149 = arith.addi %148, %arg6 : index
              %c-2_80 = arith.constant -2 : index
              %150 = arith.addi %149, %c-2_80 : index
              %c-2_81 = arith.constant -2 : index
              %151 = arith.muli %arg6, %c-2_81 : index
              %152 = arith.addi %151, %arg8 : index
              %c-1_82 = arith.constant -1 : index
              %153 = arith.addi %152, %c-1_82 : index
              %154 = memref.load %arg3[%150, %153] : memref<?x30xf64>
              %155 = arith.addf %147, %154 : f64
              %156 = arith.mulf %155, %cst : f64
              %c-2_83 = arith.constant -2 : index
              %157 = arith.muli %arg7, %c-2_83 : index
              %158 = arith.addi %157, %arg6 : index
              %c-1_84 = arith.constant -1 : index
              %159 = arith.addi %158, %c-1_84 : index
              %c-2_85 = arith.constant -2 : index
              %160 = arith.muli %arg6, %c-2_85 : index
              %161 = arith.addi %160, %arg8 : index
              %c-1_86 = arith.constant -1 : index
              %162 = arith.addi %161, %c-1_86 : index
              memref.store %156, %arg2[%159, %162] : memref<?x30xf64>
            }
            %c0_44 = arith.constant 0 : index
            %c-1_45 = arith.constant -1 : index
            %69 = arith.addi %arg6, %c-1_45 : index
            %c16_46 = arith.constant 16 : index
            %c0_47 = arith.constant 0 : index
            %c1_48 = arith.constant 1 : index
            %70 = arith.cmpi sle, %69, %c0_47 : index
            %71 = arith.subi %c0_47, %69 : index
            %72 = arith.subi %69, %c1_48 : index
            %73 = arith.select %70, %71, %72 : index
            %74 = arith.divsi %73, %c16_46 : index
            %75 = arith.subi %c0_47, %74 : index
            %76 = arith.addi %74, %c1_48 : index
            %77 = arith.select %70, %75, %76 : index
            %c-1_49 = arith.constant -1 : index
            %78 = arith.muli %77, %c-1_49 : index
            %79 = arith.addi %arg5, %78 : index
            %80 = arith.cmpi sge, %79, %c0_44 : index
            scf.if %80 {
              %c-2 = arith.constant -2 : index
              %81 = arith.muli %arg7, %c-2 : index
              %82 = arith.addi %81, %arg6 : index
              %c-1_50 = arith.constant -1 : index
              %83 = arith.addi %82, %c-1_50 : index
              %c28 = arith.constant 28 : index
              %84 = memref.load %arg3[%83, %c28] : memref<?x30xf64>
              %c-2_51 = arith.constant -2 : index
              %85 = arith.muli %arg7, %c-2_51 : index
              %86 = arith.addi %85, %arg6 : index
              %c-1_52 = arith.constant -1 : index
              %87 = arith.addi %86, %c-1_52 : index
              %c27 = arith.constant 27 : index
              %88 = memref.load %arg3[%87, %c27] : memref<?x30xf64>
              %89 = arith.addf %84, %88 : f64
              %c-2_53 = arith.constant -2 : index
              %90 = arith.muli %arg7, %c-2_53 : index
              %91 = arith.addi %90, %arg6 : index
              %c-1_54 = arith.constant -1 : index
              %92 = arith.addi %91, %c-1_54 : index
              %c29_55 = arith.constant 29 : index
              %93 = memref.load %arg3[%92, %c29_55] : memref<?x30xf64>
              %94 = arith.addf %89, %93 : f64
              %c-2_56 = arith.constant -2 : index
              %95 = arith.muli %arg7, %c-2_56 : index
              %96 = arith.addi %95, %arg6 : index
              %c28_57 = arith.constant 28 : index
              %97 = memref.load %arg3[%96, %c28_57] : memref<?x30xf64>
              %98 = arith.addf %94, %97 : f64
              %c-2_58 = arith.constant -2 : index
              %99 = arith.muli %arg7, %c-2_58 : index
              %100 = arith.addi %99, %arg6 : index
              %c-2_59 = arith.constant -2 : index
              %101 = arith.addi %100, %c-2_59 : index
              %c28_60 = arith.constant 28 : index
              %102 = memref.load %arg3[%101, %c28_60] : memref<?x30xf64>
              %103 = arith.addf %98, %102 : f64
              %104 = arith.mulf %103, %cst : f64
              %c-2_61 = arith.constant -2 : index
              %105 = arith.muli %arg7, %c-2_61 : index
              %106 = arith.addi %105, %arg6 : index
              %c-1_62 = arith.constant -1 : index
              %107 = arith.addi %106, %c-1_62 : index
              %c28_63 = arith.constant 28 : index
              memref.store %104, %arg2[%107, %c28_63] : memref<?x30xf64>
            }
          }
          %c0_25 = arith.constant 0 : index
          %c-1_26 = arith.constant -1 : index
          %39 = arith.addi %arg6, %c-1_26 : index
          %c16_27 = arith.constant 16 : index
          %c0_28 = arith.constant 0 : index
          %c1_29 = arith.constant 1 : index
          %40 = arith.cmpi sle, %39, %c0_28 : index
          %41 = arith.subi %c0_28, %39 : index
          %42 = arith.subi %39, %c1_29 : index
          %43 = arith.select %40, %41, %42 : index
          %44 = arith.divsi %43, %c16_27 : index
          %45 = arith.subi %c0_28, %44 : index
          %46 = arith.addi %44, %c1_29 : index
          %47 = arith.select %40, %45, %46 : index
          %c-1_30 = arith.constant -1 : index
          %48 = arith.muli %47, %c-1_30 : index
          %49 = arith.addi %arg4, %48 : index
          %50 = arith.cmpi sge, %49, %c0_25 : index
          scf.if %50 {
            %c32_31 = arith.constant 32 : index
            %51 = arith.muli %arg5, %c32_31 : index
            %c2_32 = arith.constant 2 : index
            %52 = arith.muli %arg6, %c2_32 : index
            %c2_33 = arith.constant 2 : index
            %53 = arith.addi %52, %c2_33 : index
            %54 = arith.maxsi %51, %53 : index
            %c32_34 = arith.constant 32 : index
            %55 = arith.muli %arg5, %c32_34 : index
            %c32_35 = arith.constant 32 : index
            %56 = arith.addi %55, %c32_35 : index
            %c2_36 = arith.constant 2 : index
            %57 = arith.muli %arg6, %c2_36 : index
            %c30 = arith.constant 30 : index
            %58 = arith.addi %57, %c30 : index
            %59 = arith.minsi %56, %58 : index
            %c1_37 = arith.constant 1 : index
            scf.for %arg7 = %54 to %59 step %c1_37 {
              %c28 = arith.constant 28 : index
              %c-2 = arith.constant -2 : index
              %60 = arith.muli %arg6, %c-2 : index
              %61 = arith.addi %60, %arg7 : index
              %c-1_38 = arith.constant -1 : index
              %62 = arith.addi %61, %c-1_38 : index
              %63 = memref.load %arg3[%c28, %62] : memref<?x30xf64>
              %c28_39 = arith.constant 28 : index
              %c-2_40 = arith.constant -2 : index
              %64 = arith.muli %arg6, %c-2_40 : index
              %65 = arith.addi %64, %arg7 : index
              %c-2_41 = arith.constant -2 : index
              %66 = arith.addi %65, %c-2_41 : index
              %67 = memref.load %arg3[%c28_39, %66] : memref<?x30xf64>
              %68 = arith.addf %63, %67 : f64
              %c28_42 = arith.constant 28 : index
              %c-2_43 = arith.constant -2 : index
              %69 = arith.muli %arg6, %c-2_43 : index
              %70 = arith.addi %69, %arg7 : index
              %71 = memref.load %arg3[%c28_42, %70] : memref<?x30xf64>
              %72 = arith.addf %68, %71 : f64
              %c29_44 = arith.constant 29 : index
              %c-2_45 = arith.constant -2 : index
              %73 = arith.muli %arg6, %c-2_45 : index
              %74 = arith.addi %73, %arg7 : index
              %c-1_46 = arith.constant -1 : index
              %75 = arith.addi %74, %c-1_46 : index
              %76 = memref.load %arg3[%c29_44, %75] : memref<?x30xf64>
              %77 = arith.addf %72, %76 : f64
              %c27 = arith.constant 27 : index
              %c-2_47 = arith.constant -2 : index
              %78 = arith.muli %arg6, %c-2_47 : index
              %79 = arith.addi %78, %arg7 : index
              %c-1_48 = arith.constant -1 : index
              %80 = arith.addi %79, %c-1_48 : index
              %81 = memref.load %arg3[%c27, %80] : memref<?x30xf64>
              %82 = arith.addf %77, %81 : f64
              %83 = arith.mulf %82, %cst : f64
              %c28_49 = arith.constant 28 : index
              %c-2_50 = arith.constant -2 : index
              %84 = arith.muli %arg6, %c-2_50 : index
              %85 = arith.addi %84, %arg7 : index
              %c-1_51 = arith.constant -1 : index
              %86 = arith.addi %85, %c-1_51 : index
              memref.store %83, %arg2[%c28_49, %86] : memref<?x30xf64>
            }
          }
        }
        %c0_10 = arith.constant 0 : index
        %c-1_11 = arith.constant -1 : index
        %16 = arith.muli %arg5, %c-1_11 : index
        %c-1_12 = arith.constant -1 : index
        %17 = arith.muli %arg4, %c-1_12 : index
        %18 = arith.addi %16, %17 : index
        %c1_13 = arith.constant 1 : index
        %19 = arith.addi %18, %c1_13 : index
        %20 = arith.cmpi sge, %19, %c0_10 : index
        scf.if %20 {
          %c31 = arith.constant 31 : index
          %c32 = arith.constant 32 : index
          %21 = arith.muli %arg4, %c32 : index
          %22 = arith.maxsi %c31, %21 : index
          %c59 = arith.constant 59 : index
          %c32_14 = arith.constant 32 : index
          %23 = arith.muli %arg4, %c32_14 : index
          %c32_15 = arith.constant 32 : index
          %24 = arith.addi %23, %c32_15 : index
          %25 = arith.minsi %c59, %24 : index
          %c1_16 = arith.constant 1 : index
          scf.for %arg6 = %22 to %25 step %c1_16 {
            %c31_17 = arith.constant 31 : index
            %c32_18 = arith.constant 32 : index
            %26 = arith.muli %arg5, %c32_18 : index
            %27 = arith.maxsi %c31_17, %26 : index
            %c59_19 = arith.constant 59 : index
            %c32_20 = arith.constant 32 : index
            %28 = arith.muli %arg5, %c32_20 : index
            %c32_21 = arith.constant 32 : index
            %29 = arith.addi %28, %c32_21 : index
            %30 = arith.minsi %c59_19, %29 : index
            %c1_22 = arith.constant 1 : index
            scf.for %arg7 = %27 to %30 step %c1_22 {
              %c-30 = arith.constant -30 : index
              %31 = arith.addi %arg6, %c-30 : index
              %c-30_23 = arith.constant -30 : index
              %32 = arith.addi %arg7, %c-30_23 : index
              %33 = memref.load %arg2[%31, %32] : memref<?x30xf64>
              %c-30_24 = arith.constant -30 : index
              %34 = arith.addi %arg6, %c-30_24 : index
              %c-31 = arith.constant -31 : index
              %35 = arith.addi %arg7, %c-31 : index
              %36 = memref.load %arg2[%34, %35] : memref<?x30xf64>
              %37 = arith.addf %33, %36 : f64
              %c-30_25 = arith.constant -30 : index
              %38 = arith.addi %arg6, %c-30_25 : index
              %c-29 = arith.constant -29 : index
              %39 = arith.addi %arg7, %c-29 : index
              %40 = memref.load %arg2[%38, %39] : memref<?x30xf64>
              %41 = arith.addf %37, %40 : f64
              %c-29_26 = arith.constant -29 : index
              %42 = arith.addi %arg6, %c-29_26 : index
              %c-30_27 = arith.constant -30 : index
              %43 = arith.addi %arg7, %c-30_27 : index
              %44 = memref.load %arg2[%42, %43] : memref<?x30xf64>
              %45 = arith.addf %41, %44 : f64
              %c-31_28 = arith.constant -31 : index
              %46 = arith.addi %arg6, %c-31_28 : index
              %c-30_29 = arith.constant -30 : index
              %47 = arith.addi %arg7, %c-30_29 : index
              %48 = memref.load %arg2[%46, %47] : memref<?x30xf64>
              %49 = arith.addf %45, %48 : f64
              %50 = arith.mulf %49, %cst : f64
              %c-30_30 = arith.constant -30 : index
              %51 = arith.addi %arg6, %c-30_30 : index
              %c-30_31 = arith.constant -30 : index
              %52 = arith.addi %arg7, %c-30_31 : index
              memref.store %50, %arg3[%51, %52] : memref<?x30xf64>
            }
          }
        }
      }
    }
    return
  }
}


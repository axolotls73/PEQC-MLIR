module {
  func.func @kernel_heat_3d(%arg0: i32, %arg1: i32, %arg2: memref<?x10x10xf64>, %arg3: memref<?x10x10xf64>) {
    %cst = arith.constant 1.250000e-01 : f64
    %cst_0 = arith.constant 2.000000e+00 : f64
    %c0 = arith.constant 0 : index
    %c1 = arith.constant 1 : index
    %c1_1 = arith.constant 1 : index
    scf.parallel (%arg4) = (%c0) to (%c1) step (%c1_1) {
      %c32 = arith.constant 32 : index
      %0 = arith.muli %arg4, %c32 : index
      %c1_2 = arith.constant 1 : index
      %1 = arith.addi %0, %c1_2 : index
      %c0_3 = arith.constant 0 : index
      %c20 = arith.constant 20 : index
      %c1_4 = arith.constant 1 : index
      scf.for %arg5 = %c0_3 to %c20 step %c1_4 {
        %2 = arith.addi %1, %arg5 : index
        %c0_5 = arith.constant 0 : index
        %c8 = arith.constant 8 : index
        %c1_6 = arith.constant 1 : index
        scf.for %arg6 = %c0_5 to %c8 step %c1_6 {
          %c1_10 = arith.constant 1 : index
          %3 = arith.addi %arg6, %c1_10 : index
          %c0_11 = arith.constant 0 : index
          %c2 = arith.constant 2 : index
          %c1_12 = arith.constant 1 : index
          scf.for %arg7 = %c0_11 to %c2 step %c1_12 {
            %c4 = arith.constant 4 : index
            %4 = arith.muli %arg7, %c4 : index
            %c1_13 = arith.constant 1 : index
            %5 = arith.addi %4, %c1_13 : index
            %c0_14 = arith.constant 0 : index
            %c8_15 = arith.constant 8 : index
            %c1_16 = arith.constant 1 : index
            scf.for %arg8 = %c0_14 to %c8_15 step %c1_16 {
              %c1_17 = arith.constant 1 : index
              %6 = arith.addi %arg8, %c1_17 : index
              %c1_18 = arith.constant 1 : index
              %7 = arith.addi %6, %c1_18 : index
              %8 = memref.load %arg2[%7, %3, %5] : memref<?x10x10xf64>
              %9 = memref.load %arg2[%6, %3, %5] : memref<?x10x10xf64>
              %10 = arith.mulf %9, %cst_0 : f64
              %11 = arith.subf %8, %10 : f64
              %c-1 = arith.constant -1 : index
              %12 = arith.addi %6, %c-1 : index
              %13 = memref.load %arg2[%12, %3, %5] : memref<?x10x10xf64>
              %14 = arith.addf %11, %13 : f64
              %15 = arith.mulf %14, %cst : f64
              %c1_19 = arith.constant 1 : index
              %16 = arith.addi %3, %c1_19 : index
              %17 = memref.load %arg2[%6, %16, %5] : memref<?x10x10xf64>
              %18 = arith.subf %17, %10 : f64
              %c-1_20 = arith.constant -1 : index
              %19 = arith.addi %3, %c-1_20 : index
              %20 = memref.load %arg2[%6, %19, %5] : memref<?x10x10xf64>
              %21 = arith.addf %18, %20 : f64
              %22 = arith.mulf %21, %cst : f64
              %23 = arith.addf %15, %22 : f64
              %c1_21 = arith.constant 1 : index
              %24 = arith.addi %5, %c1_21 : index
              %25 = memref.load %arg2[%6, %3, %24] : memref<?x10x10xf64>
              %26 = arith.subf %25, %10 : f64
              %c-1_22 = arith.constant -1 : index
              %27 = arith.addi %5, %c-1_22 : index
              %28 = memref.load %arg2[%6, %3, %27] : memref<?x10x10xf64>
              %29 = arith.addf %26, %28 : f64
              %30 = arith.mulf %29, %cst : f64
              %31 = arith.addf %23, %30 : f64
              %32 = arith.addf %31, %9 : f64
              memref.store %32, %arg3[%6, %3, %5] : memref<?x10x10xf64>
              %c1_23 = arith.constant 1 : index
              %33 = arith.addi %5, %c1_23 : index
              %c1_24 = arith.constant 1 : index
              %34 = arith.addi %6, %c1_24 : index
              %35 = memref.load %arg2[%34, %3, %33] : memref<?x10x10xf64>
              %36 = memref.load %arg2[%6, %3, %33] : memref<?x10x10xf64>
              %37 = arith.mulf %36, %cst_0 : f64
              %38 = arith.subf %35, %37 : f64
              %c-1_25 = arith.constant -1 : index
              %39 = arith.addi %6, %c-1_25 : index
              %40 = memref.load %arg2[%39, %3, %33] : memref<?x10x10xf64>
              %41 = arith.addf %38, %40 : f64
              %42 = arith.mulf %41, %cst : f64
              %c1_26 = arith.constant 1 : index
              %43 = arith.addi %3, %c1_26 : index
              %44 = memref.load %arg2[%6, %43, %33] : memref<?x10x10xf64>
              %45 = arith.subf %44, %37 : f64
              %c-1_27 = arith.constant -1 : index
              %46 = arith.addi %3, %c-1_27 : index
              %47 = memref.load %arg2[%6, %46, %33] : memref<?x10x10xf64>
              %48 = arith.addf %45, %47 : f64
              %49 = arith.mulf %48, %cst : f64
              %50 = arith.addf %42, %49 : f64
              %c1_28 = arith.constant 1 : index
              %51 = arith.addi %33, %c1_28 : index
              %52 = memref.load %arg2[%6, %3, %51] : memref<?x10x10xf64>
              %53 = arith.subf %52, %37 : f64
              %c-1_29 = arith.constant -1 : index
              %54 = arith.addi %33, %c-1_29 : index
              %55 = memref.load %arg2[%6, %3, %54] : memref<?x10x10xf64>
              %56 = arith.addf %53, %55 : f64
              %57 = arith.mulf %56, %cst : f64
              %58 = arith.addf %50, %57 : f64
              %59 = arith.addf %58, %36 : f64
              memref.store %59, %arg3[%6, %3, %33] : memref<?x10x10xf64>
              %c2_30 = arith.constant 2 : index
              %60 = arith.addi %5, %c2_30 : index
              %c1_31 = arith.constant 1 : index
              %61 = arith.addi %6, %c1_31 : index
              %62 = memref.load %arg2[%61, %3, %60] : memref<?x10x10xf64>
              %63 = memref.load %arg2[%6, %3, %60] : memref<?x10x10xf64>
              %64 = arith.mulf %63, %cst_0 : f64
              %65 = arith.subf %62, %64 : f64
              %c-1_32 = arith.constant -1 : index
              %66 = arith.addi %6, %c-1_32 : index
              %67 = memref.load %arg2[%66, %3, %60] : memref<?x10x10xf64>
              %68 = arith.addf %65, %67 : f64
              %69 = arith.mulf %68, %cst : f64
              %c1_33 = arith.constant 1 : index
              %70 = arith.addi %3, %c1_33 : index
              %71 = memref.load %arg2[%6, %70, %60] : memref<?x10x10xf64>
              %72 = arith.subf %71, %64 : f64
              %c-1_34 = arith.constant -1 : index
              %73 = arith.addi %3, %c-1_34 : index
              %74 = memref.load %arg2[%6, %73, %60] : memref<?x10x10xf64>
              %75 = arith.addf %72, %74 : f64
              %76 = arith.mulf %75, %cst : f64
              %77 = arith.addf %69, %76 : f64
              %c1_35 = arith.constant 1 : index
              %78 = arith.addi %60, %c1_35 : index
              %79 = memref.load %arg2[%6, %3, %78] : memref<?x10x10xf64>
              %80 = arith.subf %79, %64 : f64
              %c-1_36 = arith.constant -1 : index
              %81 = arith.addi %60, %c-1_36 : index
              %82 = memref.load %arg2[%6, %3, %81] : memref<?x10x10xf64>
              %83 = arith.addf %80, %82 : f64
              %84 = arith.mulf %83, %cst : f64
              %85 = arith.addf %77, %84 : f64
              %86 = arith.addf %85, %63 : f64
              memref.store %86, %arg3[%6, %3, %60] : memref<?x10x10xf64>
              %c3 = arith.constant 3 : index
              %87 = arith.addi %5, %c3 : index
              %c1_37 = arith.constant 1 : index
              %88 = arith.addi %6, %c1_37 : index
              %89 = memref.load %arg2[%88, %3, %87] : memref<?x10x10xf64>
              %90 = memref.load %arg2[%6, %3, %87] : memref<?x10x10xf64>
              %91 = arith.mulf %90, %cst_0 : f64
              %92 = arith.subf %89, %91 : f64
              %c-1_38 = arith.constant -1 : index
              %93 = arith.addi %6, %c-1_38 : index
              %94 = memref.load %arg2[%93, %3, %87] : memref<?x10x10xf64>
              %95 = arith.addf %92, %94 : f64
              %96 = arith.mulf %95, %cst : f64
              %c1_39 = arith.constant 1 : index
              %97 = arith.addi %3, %c1_39 : index
              %98 = memref.load %arg2[%6, %97, %87] : memref<?x10x10xf64>
              %99 = arith.subf %98, %91 : f64
              %c-1_40 = arith.constant -1 : index
              %100 = arith.addi %3, %c-1_40 : index
              %101 = memref.load %arg2[%6, %100, %87] : memref<?x10x10xf64>
              %102 = arith.addf %99, %101 : f64
              %103 = arith.mulf %102, %cst : f64
              %104 = arith.addf %96, %103 : f64
              %c1_41 = arith.constant 1 : index
              %105 = arith.addi %87, %c1_41 : index
              %106 = memref.load %arg2[%6, %3, %105] : memref<?x10x10xf64>
              %107 = arith.subf %106, %91 : f64
              %c-1_42 = arith.constant -1 : index
              %108 = arith.addi %87, %c-1_42 : index
              %109 = memref.load %arg2[%6, %3, %108] : memref<?x10x10xf64>
              %110 = arith.addf %107, %109 : f64
              %111 = arith.mulf %110, %cst : f64
              %112 = arith.addf %104, %111 : f64
              %113 = arith.addf %112, %90 : f64
              memref.store %113, %arg3[%6, %3, %87] : memref<?x10x10xf64>
            }
          }
        }
        %c0_7 = arith.constant 0 : index
        %c8_8 = arith.constant 8 : index
        %c1_9 = arith.constant 1 : index
        scf.for %arg6 = %c0_7 to %c8_8 step %c1_9 {
          %c1_10 = arith.constant 1 : index
          %3 = arith.addi %arg6, %c1_10 : index
          %c0_11 = arith.constant 0 : index
          %c2 = arith.constant 2 : index
          %c1_12 = arith.constant 1 : index
          scf.for %arg7 = %c0_11 to %c2 step %c1_12 {
            %c4 = arith.constant 4 : index
            %4 = arith.muli %arg7, %c4 : index
            %c1_13 = arith.constant 1 : index
            %5 = arith.addi %4, %c1_13 : index
            %c0_14 = arith.constant 0 : index
            %c8_15 = arith.constant 8 : index
            %c1_16 = arith.constant 1 : index
            scf.for %arg8 = %c0_14 to %c8_15 step %c1_16 {
              %c1_17 = arith.constant 1 : index
              %6 = arith.addi %arg8, %c1_17 : index
              %c1_18 = arith.constant 1 : index
              %7 = arith.addi %6, %c1_18 : index
              %8 = memref.load %arg3[%7, %3, %5] : memref<?x10x10xf64>
              %9 = memref.load %arg3[%6, %3, %5] : memref<?x10x10xf64>
              %10 = arith.mulf %9, %cst_0 : f64
              %11 = arith.subf %8, %10 : f64
              %c-1 = arith.constant -1 : index
              %12 = arith.addi %6, %c-1 : index
              %13 = memref.load %arg3[%12, %3, %5] : memref<?x10x10xf64>
              %14 = arith.addf %11, %13 : f64
              %15 = arith.mulf %14, %cst : f64
              %c1_19 = arith.constant 1 : index
              %16 = arith.addi %3, %c1_19 : index
              %17 = memref.load %arg3[%6, %16, %5] : memref<?x10x10xf64>
              %18 = arith.subf %17, %10 : f64
              %c-1_20 = arith.constant -1 : index
              %19 = arith.addi %3, %c-1_20 : index
              %20 = memref.load %arg3[%6, %19, %5] : memref<?x10x10xf64>
              %21 = arith.addf %18, %20 : f64
              %22 = arith.mulf %21, %cst : f64
              %23 = arith.addf %15, %22 : f64
              %c1_21 = arith.constant 1 : index
              %24 = arith.addi %5, %c1_21 : index
              %25 = memref.load %arg3[%6, %3, %24] : memref<?x10x10xf64>
              %26 = arith.subf %25, %10 : f64
              %c-1_22 = arith.constant -1 : index
              %27 = arith.addi %5, %c-1_22 : index
              %28 = memref.load %arg3[%6, %3, %27] : memref<?x10x10xf64>
              %29 = arith.addf %26, %28 : f64
              %30 = arith.mulf %29, %cst : f64
              %31 = arith.addf %23, %30 : f64
              %32 = arith.addf %31, %9 : f64
              memref.store %32, %arg2[%6, %3, %5] : memref<?x10x10xf64>
              %c1_23 = arith.constant 1 : index
              %33 = arith.addi %5, %c1_23 : index
              %c1_24 = arith.constant 1 : index
              %34 = arith.addi %6, %c1_24 : index
              %35 = memref.load %arg3[%34, %3, %33] : memref<?x10x10xf64>
              %36 = memref.load %arg3[%6, %3, %33] : memref<?x10x10xf64>
              %37 = arith.mulf %36, %cst_0 : f64
              %38 = arith.subf %35, %37 : f64
              %c-1_25 = arith.constant -1 : index
              %39 = arith.addi %6, %c-1_25 : index
              %40 = memref.load %arg3[%39, %3, %33] : memref<?x10x10xf64>
              %41 = arith.addf %38, %40 : f64
              %42 = arith.mulf %41, %cst : f64
              %c1_26 = arith.constant 1 : index
              %43 = arith.addi %3, %c1_26 : index
              %44 = memref.load %arg3[%6, %43, %33] : memref<?x10x10xf64>
              %45 = arith.subf %44, %37 : f64
              %c-1_27 = arith.constant -1 : index
              %46 = arith.addi %3, %c-1_27 : index
              %47 = memref.load %arg3[%6, %46, %33] : memref<?x10x10xf64>
              %48 = arith.addf %45, %47 : f64
              %49 = arith.mulf %48, %cst : f64
              %50 = arith.addf %42, %49 : f64
              %c1_28 = arith.constant 1 : index
              %51 = arith.addi %33, %c1_28 : index
              %52 = memref.load %arg3[%6, %3, %51] : memref<?x10x10xf64>
              %53 = arith.subf %52, %37 : f64
              %c-1_29 = arith.constant -1 : index
              %54 = arith.addi %33, %c-1_29 : index
              %55 = memref.load %arg3[%6, %3, %54] : memref<?x10x10xf64>
              %56 = arith.addf %53, %55 : f64
              %57 = arith.mulf %56, %cst : f64
              %58 = arith.addf %50, %57 : f64
              %59 = arith.addf %58, %36 : f64
              memref.store %59, %arg2[%6, %3, %33] : memref<?x10x10xf64>
              %c2_30 = arith.constant 2 : index
              %60 = arith.addi %5, %c2_30 : index
              %c1_31 = arith.constant 1 : index
              %61 = arith.addi %6, %c1_31 : index
              %62 = memref.load %arg3[%61, %3, %60] : memref<?x10x10xf64>
              %63 = memref.load %arg3[%6, %3, %60] : memref<?x10x10xf64>
              %64 = arith.mulf %63, %cst_0 : f64
              %65 = arith.subf %62, %64 : f64
              %c-1_32 = arith.constant -1 : index
              %66 = arith.addi %6, %c-1_32 : index
              %67 = memref.load %arg3[%66, %3, %60] : memref<?x10x10xf64>
              %68 = arith.addf %65, %67 : f64
              %69 = arith.mulf %68, %cst : f64
              %c1_33 = arith.constant 1 : index
              %70 = arith.addi %3, %c1_33 : index
              %71 = memref.load %arg3[%6, %70, %60] : memref<?x10x10xf64>
              %72 = arith.subf %71, %64 : f64
              %c-1_34 = arith.constant -1 : index
              %73 = arith.addi %3, %c-1_34 : index
              %74 = memref.load %arg3[%6, %73, %60] : memref<?x10x10xf64>
              %75 = arith.addf %72, %74 : f64
              %76 = arith.mulf %75, %cst : f64
              %77 = arith.addf %69, %76 : f64
              %c1_35 = arith.constant 1 : index
              %78 = arith.addi %60, %c1_35 : index
              %79 = memref.load %arg3[%6, %3, %78] : memref<?x10x10xf64>
              %80 = arith.subf %79, %64 : f64
              %c-1_36 = arith.constant -1 : index
              %81 = arith.addi %60, %c-1_36 : index
              %82 = memref.load %arg3[%6, %3, %81] : memref<?x10x10xf64>
              %83 = arith.addf %80, %82 : f64
              %84 = arith.mulf %83, %cst : f64
              %85 = arith.addf %77, %84 : f64
              %86 = arith.addf %85, %63 : f64
              memref.store %86, %arg2[%6, %3, %60] : memref<?x10x10xf64>
              %c3 = arith.constant 3 : index
              %87 = arith.addi %5, %c3 : index
              %c1_37 = arith.constant 1 : index
              %88 = arith.addi %6, %c1_37 : index
              %89 = memref.load %arg3[%88, %3, %87] : memref<?x10x10xf64>
              %90 = memref.load %arg3[%6, %3, %87] : memref<?x10x10xf64>
              %91 = arith.mulf %90, %cst_0 : f64
              %92 = arith.subf %89, %91 : f64
              %c-1_38 = arith.constant -1 : index
              %93 = arith.addi %6, %c-1_38 : index
              %94 = memref.load %arg3[%93, %3, %87] : memref<?x10x10xf64>
              %95 = arith.addf %92, %94 : f64
              %96 = arith.mulf %95, %cst : f64
              %c1_39 = arith.constant 1 : index
              %97 = arith.addi %3, %c1_39 : index
              %98 = memref.load %arg3[%6, %97, %87] : memref<?x10x10xf64>
              %99 = arith.subf %98, %91 : f64
              %c-1_40 = arith.constant -1 : index
              %100 = arith.addi %3, %c-1_40 : index
              %101 = memref.load %arg3[%6, %100, %87] : memref<?x10x10xf64>
              %102 = arith.addf %99, %101 : f64
              %103 = arith.mulf %102, %cst : f64
              %104 = arith.addf %96, %103 : f64
              %c1_41 = arith.constant 1 : index
              %105 = arith.addi %87, %c1_41 : index
              %106 = memref.load %arg3[%6, %3, %105] : memref<?x10x10xf64>
              %107 = arith.subf %106, %91 : f64
              %c-1_42 = arith.constant -1 : index
              %108 = arith.addi %87, %c-1_42 : index
              %109 = memref.load %arg3[%6, %3, %108] : memref<?x10x10xf64>
              %110 = arith.addf %107, %109 : f64
              %111 = arith.mulf %110, %cst : f64
              %112 = arith.addf %104, %111 : f64
              %113 = arith.addf %112, %90 : f64
              memref.store %113, %arg2[%6, %3, %87] : memref<?x10x10xf64>
            }
          }
        }
      }
      scf.reduce 
    }
    return
  }
}


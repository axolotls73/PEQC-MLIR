module {
  func.func @kernel_heat_3d(%arg0: i32, %arg1: i32, %arg2: memref<?x10x10xf64>, %arg3: memref<?x10x10xf64>) {
    %c3 = arith.constant 3 : index
    %c-1 = arith.constant -1 : index
    %c4 = arith.constant 4 : index
    %c2 = arith.constant 2 : index
    %c8 = arith.constant 8 : index
    %cst = arith.constant 1.250000e-01 : f64
    %cst_0 = arith.constant 2.000000e+00 : f64
    %c0 = arith.constant 0 : index
    %c20 = arith.constant 20 : index
    %c1 = arith.constant 1 : index
    scf.for %arg4 = %c0 to %c20 step %c1 {
      scf.for %arg5 = %c0 to %c1 step %c1 {
        scf.for %arg6 = %c0 to %c8 step %c1 {
          %0 = arith.addi %arg6, %c1 : index
          scf.for %arg7 = %c0 to %c2 step %c1 {
            %1 = arith.muli %arg7, %c4 : index
            %2 = arith.addi %1, %c1 : index
            scf.for %arg8 = %c0 to %c8 step %c1 {
              %3 = arith.addi %arg8, %c1 : index
              %4 = arith.addi %3, %c1 : index
              %5 = memref.load %arg2[%4, %0, %2] : memref<?x10x10xf64>
              %6 = memref.load %arg2[%3, %0, %2] : memref<?x10x10xf64>
              %7 = arith.mulf %6, %cst_0 : f64
              %8 = arith.subf %5, %7 : f64
              %9 = arith.addi %3, %c-1 : index
              %10 = memref.load %arg2[%9, %0, %2] : memref<?x10x10xf64>
              %11 = arith.addf %8, %10 : f64
              %12 = arith.mulf %11, %cst : f64
              %13 = arith.addi %0, %c1 : index
              %14 = memref.load %arg2[%3, %13, %2] : memref<?x10x10xf64>
              %15 = arith.subf %14, %7 : f64
              %16 = arith.addi %0, %c-1 : index
              %17 = memref.load %arg2[%3, %16, %2] : memref<?x10x10xf64>
              %18 = arith.addf %15, %17 : f64
              %19 = arith.mulf %18, %cst : f64
              %20 = arith.addf %12, %19 : f64
              %21 = arith.addi %2, %c1 : index
              %22 = memref.load %arg2[%3, %0, %21] : memref<?x10x10xf64>
              %23 = arith.subf %22, %7 : f64
              %24 = arith.addi %2, %c-1 : index
              %25 = memref.load %arg2[%3, %0, %24] : memref<?x10x10xf64>
              %26 = arith.addf %23, %25 : f64
              %27 = arith.mulf %26, %cst : f64
              %28 = arith.addf %20, %27 : f64
              %29 = arith.addf %28, %6 : f64
              memref.store %29, %arg3[%3, %0, %2] : memref<?x10x10xf64>
              %30 = arith.addi %2, %c1 : index
              %31 = arith.addi %3, %c1 : index
              %32 = memref.load %arg2[%31, %0, %30] : memref<?x10x10xf64>
              %33 = memref.load %arg2[%3, %0, %30] : memref<?x10x10xf64>
              %34 = arith.mulf %33, %cst_0 : f64
              %35 = arith.subf %32, %34 : f64
              %36 = arith.addi %3, %c-1 : index
              %37 = memref.load %arg2[%36, %0, %30] : memref<?x10x10xf64>
              %38 = arith.addf %35, %37 : f64
              %39 = arith.mulf %38, %cst : f64
              %40 = arith.addi %0, %c1 : index
              %41 = memref.load %arg2[%3, %40, %30] : memref<?x10x10xf64>
              %42 = arith.subf %41, %34 : f64
              %43 = arith.addi %0, %c-1 : index
              %44 = memref.load %arg2[%3, %43, %30] : memref<?x10x10xf64>
              %45 = arith.addf %42, %44 : f64
              %46 = arith.mulf %45, %cst : f64
              %47 = arith.addf %39, %46 : f64
              %48 = arith.addi %30, %c1 : index
              %49 = memref.load %arg2[%3, %0, %48] : memref<?x10x10xf64>
              %50 = arith.subf %49, %34 : f64
              %51 = arith.addi %30, %c-1 : index
              %52 = memref.load %arg2[%3, %0, %51] : memref<?x10x10xf64>
              %53 = arith.addf %50, %52 : f64
              %54 = arith.mulf %53, %cst : f64
              %55 = arith.addf %47, %54 : f64
              %56 = arith.addf %55, %33 : f64
              memref.store %56, %arg3[%3, %0, %30] : memref<?x10x10xf64>
              %57 = arith.addi %2, %c2 : index
              %58 = arith.addi %3, %c1 : index
              %59 = memref.load %arg2[%58, %0, %57] : memref<?x10x10xf64>
              %60 = memref.load %arg2[%3, %0, %57] : memref<?x10x10xf64>
              %61 = arith.mulf %60, %cst_0 : f64
              %62 = arith.subf %59, %61 : f64
              %63 = arith.addi %3, %c-1 : index
              %64 = memref.load %arg2[%63, %0, %57] : memref<?x10x10xf64>
              %65 = arith.addf %62, %64 : f64
              %66 = arith.mulf %65, %cst : f64
              %67 = arith.addi %0, %c1 : index
              %68 = memref.load %arg2[%3, %67, %57] : memref<?x10x10xf64>
              %69 = arith.subf %68, %61 : f64
              %70 = arith.addi %0, %c-1 : index
              %71 = memref.load %arg2[%3, %70, %57] : memref<?x10x10xf64>
              %72 = arith.addf %69, %71 : f64
              %73 = arith.mulf %72, %cst : f64
              %74 = arith.addf %66, %73 : f64
              %75 = arith.addi %57, %c1 : index
              %76 = memref.load %arg2[%3, %0, %75] : memref<?x10x10xf64>
              %77 = arith.subf %76, %61 : f64
              %78 = arith.addi %57, %c-1 : index
              %79 = memref.load %arg2[%3, %0, %78] : memref<?x10x10xf64>
              %80 = arith.addf %77, %79 : f64
              %81 = arith.mulf %80, %cst : f64
              %82 = arith.addf %74, %81 : f64
              %83 = arith.addf %82, %60 : f64
              memref.store %83, %arg3[%3, %0, %57] : memref<?x10x10xf64>
              %84 = arith.addi %2, %c3 : index
              %85 = arith.addi %3, %c1 : index
              %86 = memref.load %arg2[%85, %0, %84] : memref<?x10x10xf64>
              %87 = memref.load %arg2[%3, %0, %84] : memref<?x10x10xf64>
              %88 = arith.mulf %87, %cst_0 : f64
              %89 = arith.subf %86, %88 : f64
              %90 = arith.addi %3, %c-1 : index
              %91 = memref.load %arg2[%90, %0, %84] : memref<?x10x10xf64>
              %92 = arith.addf %89, %91 : f64
              %93 = arith.mulf %92, %cst : f64
              %94 = arith.addi %0, %c1 : index
              %95 = memref.load %arg2[%3, %94, %84] : memref<?x10x10xf64>
              %96 = arith.subf %95, %88 : f64
              %97 = arith.addi %0, %c-1 : index
              %98 = memref.load %arg2[%3, %97, %84] : memref<?x10x10xf64>
              %99 = arith.addf %96, %98 : f64
              %100 = arith.mulf %99, %cst : f64
              %101 = arith.addf %93, %100 : f64
              %102 = arith.addi %84, %c1 : index
              %103 = memref.load %arg2[%3, %0, %102] : memref<?x10x10xf64>
              %104 = arith.subf %103, %88 : f64
              %105 = arith.addi %84, %c-1 : index
              %106 = memref.load %arg2[%3, %0, %105] : memref<?x10x10xf64>
              %107 = arith.addf %104, %106 : f64
              %108 = arith.mulf %107, %cst : f64
              %109 = arith.addf %101, %108 : f64
              %110 = arith.addf %109, %87 : f64
              memref.store %110, %arg3[%3, %0, %84] : memref<?x10x10xf64>
            }
          }
        }
        scf.for %arg6 = %c0 to %c8 step %c1 {
          %0 = arith.addi %arg6, %c1 : index
          scf.for %arg7 = %c0 to %c2 step %c1 {
            %1 = arith.muli %arg7, %c4 : index
            %2 = arith.addi %1, %c1 : index
            scf.for %arg8 = %c0 to %c8 step %c1 {
              %3 = arith.addi %arg8, %c1 : index
              %4 = arith.addi %3, %c1 : index
              %5 = memref.load %arg3[%4, %0, %2] : memref<?x10x10xf64>
              %6 = memref.load %arg3[%3, %0, %2] : memref<?x10x10xf64>
              %7 = arith.mulf %6, %cst_0 : f64
              %8 = arith.subf %5, %7 : f64
              %9 = arith.addi %3, %c-1 : index
              %10 = memref.load %arg3[%9, %0, %2] : memref<?x10x10xf64>
              %11 = arith.addf %8, %10 : f64
              %12 = arith.mulf %11, %cst : f64
              %13 = arith.addi %0, %c1 : index
              %14 = memref.load %arg3[%3, %13, %2] : memref<?x10x10xf64>
              %15 = arith.subf %14, %7 : f64
              %16 = arith.addi %0, %c-1 : index
              %17 = memref.load %arg3[%3, %16, %2] : memref<?x10x10xf64>
              %18 = arith.addf %15, %17 : f64
              %19 = arith.mulf %18, %cst : f64
              %20 = arith.addf %12, %19 : f64
              %21 = arith.addi %2, %c1 : index
              %22 = memref.load %arg3[%3, %0, %21] : memref<?x10x10xf64>
              %23 = arith.subf %22, %7 : f64
              %24 = arith.addi %2, %c-1 : index
              %25 = memref.load %arg3[%3, %0, %24] : memref<?x10x10xf64>
              %26 = arith.addf %23, %25 : f64
              %27 = arith.mulf %26, %cst : f64
              %28 = arith.addf %20, %27 : f64
              %29 = arith.addf %28, %6 : f64
              memref.store %29, %arg2[%3, %0, %2] : memref<?x10x10xf64>
              %30 = arith.addi %2, %c1 : index
              %31 = arith.addi %3, %c1 : index
              %32 = memref.load %arg3[%31, %0, %30] : memref<?x10x10xf64>
              %33 = memref.load %arg3[%3, %0, %30] : memref<?x10x10xf64>
              %34 = arith.mulf %33, %cst_0 : f64
              %35 = arith.subf %32, %34 : f64
              %36 = arith.addi %3, %c-1 : index
              %37 = memref.load %arg3[%36, %0, %30] : memref<?x10x10xf64>
              %38 = arith.addf %35, %37 : f64
              %39 = arith.mulf %38, %cst : f64
              %40 = arith.addi %0, %c1 : index
              %41 = memref.load %arg3[%3, %40, %30] : memref<?x10x10xf64>
              %42 = arith.subf %41, %34 : f64
              %43 = arith.addi %0, %c-1 : index
              %44 = memref.load %arg3[%3, %43, %30] : memref<?x10x10xf64>
              %45 = arith.addf %42, %44 : f64
              %46 = arith.mulf %45, %cst : f64
              %47 = arith.addf %39, %46 : f64
              %48 = arith.addi %30, %c1 : index
              %49 = memref.load %arg3[%3, %0, %48] : memref<?x10x10xf64>
              %50 = arith.subf %49, %34 : f64
              %51 = arith.addi %30, %c-1 : index
              %52 = memref.load %arg3[%3, %0, %51] : memref<?x10x10xf64>
              %53 = arith.addf %50, %52 : f64
              %54 = arith.mulf %53, %cst : f64
              %55 = arith.addf %47, %54 : f64
              %56 = arith.addf %55, %33 : f64
              memref.store %56, %arg2[%3, %0, %30] : memref<?x10x10xf64>
              %57 = arith.addi %2, %c2 : index
              %58 = arith.addi %3, %c1 : index
              %59 = memref.load %arg3[%58, %0, %57] : memref<?x10x10xf64>
              %60 = memref.load %arg3[%3, %0, %57] : memref<?x10x10xf64>
              %61 = arith.mulf %60, %cst_0 : f64
              %62 = arith.subf %59, %61 : f64
              %63 = arith.addi %3, %c-1 : index
              %64 = memref.load %arg3[%63, %0, %57] : memref<?x10x10xf64>
              %65 = arith.addf %62, %64 : f64
              %66 = arith.mulf %65, %cst : f64
              %67 = arith.addi %0, %c1 : index
              %68 = memref.load %arg3[%3, %67, %57] : memref<?x10x10xf64>
              %69 = arith.subf %68, %61 : f64
              %70 = arith.addi %0, %c-1 : index
              %71 = memref.load %arg3[%3, %70, %57] : memref<?x10x10xf64>
              %72 = arith.addf %69, %71 : f64
              %73 = arith.mulf %72, %cst : f64
              %74 = arith.addf %66, %73 : f64
              %75 = arith.addi %57, %c1 : index
              %76 = memref.load %arg3[%3, %0, %75] : memref<?x10x10xf64>
              %77 = arith.subf %76, %61 : f64
              %78 = arith.addi %57, %c-1 : index
              %79 = memref.load %arg3[%3, %0, %78] : memref<?x10x10xf64>
              %80 = arith.addf %77, %79 : f64
              %81 = arith.mulf %80, %cst : f64
              %82 = arith.addf %74, %81 : f64
              %83 = arith.addf %82, %60 : f64
              memref.store %83, %arg2[%3, %0, %57] : memref<?x10x10xf64>
              %84 = arith.addi %2, %c3 : index
              %85 = arith.addi %3, %c1 : index
              %86 = memref.load %arg3[%85, %0, %84] : memref<?x10x10xf64>
              %87 = memref.load %arg3[%3, %0, %84] : memref<?x10x10xf64>
              %88 = arith.mulf %87, %cst_0 : f64
              %89 = arith.subf %86, %88 : f64
              %90 = arith.addi %3, %c-1 : index
              %91 = memref.load %arg3[%90, %0, %84] : memref<?x10x10xf64>
              %92 = arith.addf %89, %91 : f64
              %93 = arith.mulf %92, %cst : f64
              %94 = arith.addi %0, %c1 : index
              %95 = memref.load %arg3[%3, %94, %84] : memref<?x10x10xf64>
              %96 = arith.subf %95, %88 : f64
              %97 = arith.addi %0, %c-1 : index
              %98 = memref.load %arg3[%3, %97, %84] : memref<?x10x10xf64>
              %99 = arith.addf %96, %98 : f64
              %100 = arith.mulf %99, %cst : f64
              %101 = arith.addf %93, %100 : f64
              %102 = arith.addi %84, %c1 : index
              %103 = memref.load %arg3[%3, %0, %102] : memref<?x10x10xf64>
              %104 = arith.subf %103, %88 : f64
              %105 = arith.addi %84, %c-1 : index
              %106 = memref.load %arg3[%3, %0, %105] : memref<?x10x10xf64>
              %107 = arith.addf %104, %106 : f64
              %108 = arith.mulf %107, %cst : f64
              %109 = arith.addf %101, %108 : f64
              %110 = arith.addf %109, %87 : f64
              memref.store %110, %arg2[%3, %0, %84] : memref<?x10x10xf64>
            }
          }
        }
      }
    }
    return
  }
}

